- input: |-
    -- Create a table for departments
    CREATE TABLE DEVSECDB.departments (
        department_id NUMBER(3) PRIMARY KEY,
        department_name VARCHAR2(50) UNIQUE
    );
    -- Create a table for employees with a foreign key constraint
    CREATE TABLE DEVSECDB.employees (
        employee_id NUMBER(5) PRIMARY KEY,
        first_name VARCHAR2(50),
        last_name VARCHAR2(50),
        job_title VARCHAR2(100),
        hire_date DATE,
        salary NUMBER(10,2),
        department_id NUMBER(3),
        CONSTRAINT fk_employee_department FOREIGN KEY (department_id) REFERENCES DEVSECDB.departments(department_id)
    )
    LOGGING
    NOCOMPRESS
    PCTFREE 10
    INITRANS 1
    STORAGE (
      INITIAL 65536
    )
    NOCACHE
    DISABLE ROW MOVEMENT
    ;
    -- Create an index on the combination of columns in the employees table
    CREATE INDEX idx_employee_name_department ON DEVSECDB.employees(last_name, first_name, department_id);
    CREATE INDEX idx_employee_name ON DEVSECDB.employees(last_name, first_name)
    LOGGING
    VISIBLE
    PCTFREE 10
    INITRANS 2
    STORAGE (
      INITIAL 65536
    )
    USABLE
    ;
  want: |+
    CREATE TABLE departments (
        department_id NUMBER(3) PRIMARY KEY,
        department_name VARCHAR2(50) UNIQUE
    );

    CREATE TABLE employees (
        employee_id NUMBER(5) PRIMARY KEY,
        first_name VARCHAR2(50),
        last_name VARCHAR2(50),
        job_title VARCHAR2(100),
        hire_date DATE,
        salary NUMBER(10,2),
        department_id NUMBER(3),
         FOREIGN KEY (department_id) REFERENCES departments(department_id)
    )
    ;

    CREATE INDEX "EMPLOYEES_0230" ON employees(last_name, first_name, department_id);

    CREATE INDEX "EMPLOYEES_0221" ON employees(last_name, first_name)

    USABLE
    ;

